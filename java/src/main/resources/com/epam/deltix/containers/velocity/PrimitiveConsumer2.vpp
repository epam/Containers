/*
 * Copyright 2021 EPAM Systems, Inc
 *
 * See the NOTICE file distributed with this work for additional information
 * regarding copyright ownership. Licensed under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.epam.deltix.containers.generated;

import java.util.Objects;

@FunctionalInterface
public interface ${first_name}${second_name}Consumer {
    void accept(${first_type} first, ${second_type} second);
    default ${first_name}${second_name}Consumer andThen(${first_name}${second_name}Consumer after) {
        Objects.requireNonNull(after);
        return (${first_type} t, ${second_type} t1) -> { accept(t, t1); after.accept(t, t1); };
    }
}